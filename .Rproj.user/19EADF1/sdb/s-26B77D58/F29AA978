{
    "contents" : "require(magrittr)\nrequire(dplyr)\n\n# read in data\ndat = read.delim(\"RawData.txt\")\n\n# add identifiers (i.e., subject numbers)\ndat$Subject = 1:nrow(dat)\n\n# how many completed fully?\nlength(dat$end[!(is.na(dat$end))]) # 483 completed fully\n\n# defines items/column in each scale\nUCLA = c(\"UCLA_1_1\", \"UCLA_1_2\", \"UCLA_1_3\", \"UCLA_1_4\",             # UCLA loneliness\n         \"UCLA_1_5\", \"UCLA_1_6\", \"UCLA_1_7\", \"UCLA_1_8\",\n         \"UCLA_1_9\", \"UCLA_1_10\",\"UCLA_2_1\", \"UCLA_2_2\",\n         \"UCLA_2_3\", \"UCLA_2_4\", \"UCLA_2_5\", \"UCLA_2_6\",\n         \"UCLA_2_7\", \"UCLA_2_8\", \"UCLA_2_9\", \"UCLA_2_10\")\n\nSWLS = c(\"SLWS_1\", \"SLWS_2\", \"SLWS_3\", \"SLWS_4\", \"SLWS_5\")          # Satisfaction with Life Scale\n\nSE = c(\"SE_1_1\", \"SE_1_2\", \"SE_1_3\", \"SE_1_4\",                      # Self esteem\n       \"SE_1_5\", \"SE_1_6\", \"SE_1_7\", \"SE_1_8\",\n       \"SE_1_9\", \"SE_1_10\",\"SE_2_1\", \"SE_2_2\",\n       \"SE_2_3\", \"SE_2_4\", \"SE_2_5\", \"SE_2_6\",\n       \"SE_2_7\", \"SE_2_8\", \"SE_2_9\", \"SE_2_10\")\n\nMood = c(\"Mood_1\", \"Mood_2\",  \"Mood_3\", \"Mood_4\",                   # Mood \n         \"Mood_5\", \"Mood_6\",  \"Mood_7\", \"Mood_8\",\n         \"Mood_9\", \"Mood_10\", \"Mood_11\",\"Mood_12\",\n         \"Mood_13\",\"Mood_14\", \"Mood_15\",\"Mood_16\")\n\nDisc = c(\"Disc_1\", \"Disc_2\", \"Disc_3\", \"Disc_4\",                    # Perceived discrimination (general)\n         \"Disc_5\", \"Disc_6\", \"Disc_7\", \"Disc_8\",\n         \"Disc_9\")\n\nDiscR = c(\"DiscR_1\", \"DiscR_2\", \"DiscR_3\", \"DiscR_4\",               # Perceived discrimination (race)\n         \"DiscR_5\", \"DiscR_6\", \"DiscR_7\", \"DiscR_8\",\n         \"DiscR_9\")\n\nEIS = c(\"EIS_1\",\"EIS_2\",                                            # Existential Isolation\n        \"EIS_3\",\"EIS_4\",\n        \"EIS_5\",\"EIS_6\")\n\nWellB = c(\"Well_B_1\", \"Well_B_2\", \"Well_B_3\", \"Well_B_4\",            # Well-being (Bradburn)\n         \"Well_B_5\", \"Well_B_6\", \"Well_B_7\", \"Well_B_8\",\n         \"Well_B_9\", \"Well_B_10\")\n\nWellR = c(\"Rau_1\", \"Rem_2\", \"Rsa_6\", \"Rau_7\",                        # Well-being (Ryff)\n          \"Rem_8\", \"Rsa_12\",\"Rau_13\",\"Rem_14\",\n          \"Rsa_18\",\"Rau_19\",\"Rem_20\",\"Rsa_24\",\n          \"Rau_25\",\"Rem_26\",\"Rsa_30\",\"Rau_31\",\n          \"Rem_32\",\"Rsa_36\",\"Rau_37\",\"Rem_38\",\n          \"Rsa_42\")\n\n\n# look at subjects who didn't complete fully, only take columns for questionnaire data\nnotComplete = \n  cbind(select(dat[is.na(dat$end),], Subject)) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(UCLA))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(SWLS))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(SE))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(Mood))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(Disc))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(DiscR))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(EIS))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(WellB))) %>%\n  cbind(select(dat[is.na(dat$end),], one_of(WellR)))\n\n# make a data frame with percentage of missing data for each subject\nmissing = data.frame(Subject = NULL, PercMissing = NULL)\nfor (i in 1:nrow(notComplete)) {\n  temp = notComplete[notComplete$Subject == i,]\n  k = sum(is.na(temp))/117\n  missing = rbind(badSubs, data.frame(Subject = i, PercMissing = k))\n  }\n\nhist(missing$PercMissing, breaks = 30)\n  \nnrow(missing[missing$PercMissing > .6,])   # 20 subjects missing more than 60%\nnrow(missing[missing$PercMissing > .5,])   # 24 subjects missing more than 50%\nnrow(missing[missing$PercMissing > .4,])   # 28 subjects missing more than 40%\n\nbadSubs = missing[missing$PercMissing > .5,]\n\n\n######################################################################################\n####################### Calculate scores for each participant ########################\n######################################################################################\n\nnoBS = dat[!(dat$Subject %in% badSubs$Subject),]\n\n# UCLA Loneliness scale\n# 20 items, on scale of 1 (never) to 4 (always)\n# Reverse scored: 1, 5, 6, 9, 10, 15, 16, 19, 20\n# Higher score is more lonely\n\nUCLAdat = select(noBS, one_of(UCLA)) %>%\n  cbind(select(noBS, Subject))\n\nfor (i in unique(UCLAdat$Subject)) {\n  UCLAdat$UCLA_1_1.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_1_1[UCLAdat$Subject == i]\n  UCLAdat$UCLA_1_5.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_1_5[UCLAdat$Subject == i]\n  UCLAdat$UCLA_1_6.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_1_6[UCLAdat$Subject == i]\n  UCLAdat$UCLA_1_9.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_1_9[UCLAdat$Subject == i]\n  UCLAdat$UCLA_1_10.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_1_10[UCLAdat$Subject == i]\n  UCLAdat$UCLA_2_5.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_2_5[UCLAdat$Subject == i]\n  UCLAdat$UCLA_2_6.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_2_6[UCLAdat$Subject == i]\n  UCLAdat$UCLA_2_9.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_2_9[UCLAdat$Subject == i]\n  UCLAdat$UCLA_2_10.rev[UCLAdat$Subject == i] = 5 - UCLAdat$UCLA_2_10[UCLAdat$Subject == i]\n}\n\n# creates UCLA score by averaging across all 20 items (including reversed scored items)\nUCLAdat = mutate(UCLAdat, UCLA_total = \n                   (UCLA_1_1.rev + UCLA_1_2 + UCLA_1_3 + UCLA_1_4 +\n                      UCLA_1_5.rev + UCLA_1_6.rev + UCLA_1_7 + UCLA_1_8 +\n                      UCLA_1_9.rev + UCLA_1_10.rev + UCLA_2_1 + UCLA_2_2 +\n                      UCLA_2_3 + UCLA_2_4 + UCLA_2_5.rev + UCLA_2_6.rev +\n                      UCLA_2_7 + UCLA_2_8 + UCLA_2_9.rev + UCLA_2_10.rev)/20)\n\n# histogram shows scores normally distributed\nhist(UCLAdat$UCLA_total)\n\n\n# Satisfaction with Life scale\n# 5 items, on scale of 1 (strongly disagree) to 7 (strongly agree)\n# Average scores\n# Higher score is more satisfied with life\n\nSWLSdat = select(noBS, one_of(SWLS)) %>%\n  cbind(select(noBS, Subject))\n\n# creates SWLS score by averaging 5 items (although doc on drive says sum?)\nSWLSdat = mutate(SWLSdat, SWLS_total = (SLWS_1 + SLWS_2 + SLWS_3 + SLWS_4 + SLWS_5)/5)\n\n# histogram shows scores somewhat normally distribtued but flat\nhist(SWLSdat$SWLS_total, breaks = 20)\n\n\n# Self-esteem scale (Heatherton)\n# 20 items, on scale of 1 (not at all) to 5 (extremely)\n# Reverse scored: 2, 4, 5, 7, 8, 10, 13, 15, 16, 17, 18, 19, 20\n# Higher score is higher self-esteem\n# 3 subscales: performance, social, appearance\n\nSEdat = select(noBS, one_of(SE)) %>%\n  cbind(select(noBS, Subject))\n\nfor (i in unique(SEdat$Subject)) {\n  SEdat$SE_1_2.rev[SEdat$Subject == i] = 6 - SEdat$SE_1_2[SEdat$Subject == i]\n  SEdat$SE_1_4.rev[SEdat$Subject == i] = 6 - SEdat$SE_1_4[SEdat$Subject == i]\n  SEdat$SE_1_5.rev[SEdat$Subject == i] = 6 - SEdat$SE_1_5[SEdat$Subject == i]\n  SEdat$SE_1_7.rev[SEdat$Subject == i] = 6 - SEdat$SE_1_7[SEdat$Subject == i]\n  SEdat$SE_1_8.rev[SEdat$Subject == i] = 6 - SEdat$SE_1_8[SEdat$Subject == i]\n  SEdat$SE_1_10.rev[SEdat$Subject == i] = 6 - SEdat$SE_1_10[SEdat$Subject == i]\n  SEdat$SE_2_3.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_3[SEdat$Subject == i]\n  SEdat$SE_2_5.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_5[SEdat$Subject == i]\n  SEdat$SE_2_6.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_6[SEdat$Subject == i]\n  SEdat$SE_2_7.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_7[SEdat$Subject == i]\n  SEdat$SE_2_8.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_8[SEdat$Subject == i]\n  SEdat$SE_2_9.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_9[SEdat$Subject == i]\n  SEdat$SE_2_10.rev[SEdat$Subject == i] = 6 - SEdat$SE_2_10[SEdat$Subject == i]\n}\n\n# creates SE total score by averaging 20 items (although doc on drive says sum?)\nSEdat = mutate(SEdat, SE_total = (SE_1_1 + SE_1_2.rev + SE_1_3 + SE_1_4.rev +\n                                          SE_1_5.rev + SE_1_6 + SE_1_7.rev + SE_1_8.rev +\n                                          SE_1_9 + SE_1_10.rev + SE_2_1 + SE_2_2 +\n                                          SE_2_3.rev + SE_2_4 + SE_2_5.rev + SE_2_6.rev +\n                                          SE_2_7.rev + SE_2_8.rev + SE_2_9.rev + SE_2_10.rev)/20)\n\n# creates SE performance sub score by averaging 1, 4, 5, 9, 14, 18, 19\nSEdat = mutate(SEdat, SE_perf = (SE_1_1 + SE_1_4.rev + SE_1_5.rev + \n                                    SE_1_9 + SE_2_4 + SE_2_8.rev + SE_2_9.rev)/7)\n\n# creates SE social sub score by averaging 2, 8, 10, 13, 15, 17, 20\nSEdat = mutate(SEdat, SE_social = (SE_1_2.rev + SE_1_8.rev + SE_1_10.rev + \n                                    SE_2_3.rev + SE_2_5.rev + SE_2_7.rev + SE_2_10.rev)/7)\n\n# creates SE appearance sub score by averaging 3, 6, 7, 11, 12, 16\nSEdat = mutate(SEdat, SE_appear = (SE_1_3 + SE_1_6 + SE_1_7.rev + SE_2_1 + SE_2_2 + SE_2_6.rev)/6)\n\n# SE_total is slightly negatively skewed\nhist(SEdat$SE_total, breaks = 30)\n# SE_perf is highly negatively skewed\nhist(SEdat$SE_perf, breaks = 30)\n# SE_social is slightly negatively skewed\nhist(SEdat$SE_social, breaks = 30)\n# SE_appear is fairly normal\nhist(SEdat$SE_appear, breaks = 30)\n\n\n# Mood items\n# 16 items, on scale of 1 (not at all) to 5 (extremely)\n# Higher score is more negative mood\n# Not sure about sub scales\n\nMooddat = select(noBS, one_of(Mood)) %>%\n  cbind(select(noBS, Subject))\n\n# creates Mood total score by averaging 16 items\nMooddat = mutate(Mooddat, Mood_total = (Mood_1 + Mood_2 + Mood_3 + Mood_4 + Mood_5 + Mood_6\n                                        + Mood_7 + Mood_8 + Mood_9 + Mood_10 + Mood_11 + Mood_12\n                                        + Mood_13 + Mood_14 + Mood_15 + Mood_16)/16)\n# heavily positively skewed\nhist(Mooddat$Mood_total, breaks = 30)\n\n\n\n# Perceived discrimination (general)\n# 9 items, on scale of 1 (never) to 6 (almost every day)\n# Higher score is higher perceived discrimination\n\nPDdat = select(noBS, one_of(Disc)) %>%\n  cbind(select(noBS, Subject))\n\n# creates PD (general) score by summing 9 items\nPDdat = mutate(PDdat, PD_general = (Disc_1 + Disc_2 + Disc_3 + Disc_4 + Disc_5 + Disc_6 + Disc_7 +\n                                      Disc_8 + Disc_9))\n\n# positively skewed\nhist(PDdat$PD_general, breaks = 30)\n\n\n# Perceived discrimination (race)\n# 9 items, on scale of 1 (never) to 6 (almost every day)\n# Higher score is higher perceived discrimination\n\nPDRdat = select(noBS, one_of(DiscR)) %>%\n  cbind(select(noBS, Subject))\n\n# creates PD (race) score by summing 9 items\nPDRdat = mutate(PDRdat, PD_race = (DiscR_1 + DiscR_2 + DiscR_3 + DiscR_4 + DiscR_5 + DiscR_6 + DiscR_7 +\n                                      DiscR_8 + DiscR_9))\n\n# positively skewed\nhist(PDRdat$PD_race, breaks = 30)\n\n\n\n# Existential Isolation Scale\n# 6 items, on scale of 1 (strongly disagree) to 9 (strongly agree)\n# Reverse scored: 1, 2, 3, 6\n# Higher score is higher existential isolation\n\nEIdat = select(noBS, one_of(EIS)) %>%\n  cbind(select(noBS, Subject))\n\nfor (i in unique(EIdat$Subject)) {\n  EIdat$EIS_1.rev[EIdat$Subject == i] = 10 - EIdat$EIS_1[EIdat$Subject == i]\n  EIdat$EIS_2.rev[EIdat$Subject == i] = 10 - EIdat$EIS_2[EIdat$Subject == i]\n  EIdat$EIS_3.rev[EIdat$Subject == i] = 10 - EIdat$EIS_3[EIdat$Subject == i]\n  EIdat$EIS_6.rev[EIdat$Subject == i] = 10 - EIdat$EIS_6[EIdat$Subject == i]\n}\n\n# creates EI total score by averaging 6 items\nEIdat = mutate(EIdat, EI_total = (EIS_1.rev + EIS_2.rev + EIS_3.rev + EIS_4 +\n                                    EIS_5 + EIS_6.rev)/6)\n\n# normally distributed\nhist(EIdat$EI_total, breaks = 30)\n\n\n\n# Psychological wellbeing (Bradburn)- also called affect balance scale\n# 5 positive affect items, 5 negative affect items\n# Answer yes (1) or no (2) to each item\n# Number of \"yes\"s on NA scale subtracted from \"yes\"s on PA scale\n# Higher score is more wellbeing\n\nWellBdat = select(noBS, one_of(WellB)) %>%\n  cbind(select(noBS, Subject))\n\nfor (i in unique(WellBdat$Subject)) {       \n  # calculate positive affect score\n  PAtemp = WellBdat[WellBdat$Subject == i,1:5]\n  WellBdat$WellB_PA[WellBdat$Subject == i] = 10 - sum(PAtemp)\n  # calculate negative affect score\n  NAtemp = WellBdat[WellBdat$Subject == i,6:10]\n  WellBdat$WellB_NA[WellBdat$Subject == i] = 10 - sum(NAtemp)\n  # subtract NA from PA for total score\n  WellBdat$WellB_total[WellBdat$Subject == i] = (10 - sum(PAtemp)) - (10 - sum(NAtemp))\n  \n}  \n\n# distribution is eh\nhist(WellBdat$WellB_total, breaks = 30)\n\n\n\n# Psychological wellbeing (Ryff)\n# 21 items, scored from 1 (strongly disagree) to 6 (strongly agree)\n# Reverse score: 13, 14, 18, 19, 26, 30, 31, 32, 36\n# Higher score is more wellbeing\n# Subscales: autonomy, environmental mastery, self-acceptance\n\nWellRdat = select(noBS, one_of(WellR)) %>%\n  cbind(select(noBS, Subject))\n\nfor (i in unique(WellRdat$Subject)) {\n  WellRdat$Rau_13.rev[WellRdat$Subject == i] = 10 - WellRdat$Rau_13[WellRdat$Subject == i]\n  WellRdat$Rem_14.rev[WellRdat$Subject == i] = 10 - WellRdat$Rem_14[WellRdat$Subject == i]\n  WellRdat$Rsa_18.rev[WellRdat$Subject == i] = 10 - WellRdat$Rsa_18[WellRdat$Subject == i]\n  WellRdat$Rau_19.rev[WellRdat$Subject == i] = 10 - WellRdat$Rau_19[WellRdat$Subject == i]\n  WellRdat$Rem_26.rev[WellRdat$Subject == i] = 10 - WellRdat$Rem_26[WellRdat$Subject == i]\n  WellRdat$Rsa_30.rev[WellRdat$Subject == i] = 10 - WellRdat$Rsa_30[WellRdat$Subject == i]\n  WellRdat$Rau_31.rev[WellRdat$Subject == i] = 10 - WellRdat$Rau_31[WellRdat$Subject == i]\n  WellRdat$Rem_32.rev[WellRdat$Subject == i] = 10 - WellRdat$Rem_32[WellRdat$Subject == i]\n  WellRdat$Rsa_36.rev[WellRdat$Subject == i] = 10 - WellRdat$Rsa_36[WellRdat$Subject == i]\n}\n\n# creates total wellbeing score by averaging all 21 items\nWellRdat = mutate(WellRdat, WellR_total = (Rau_1 + Rem_2 + Rsa_6 + Rau_7 +\n                                           Rem_8 + Rsa_12 + Rau_13.rev + Rem_14.rev +\n                                           Rsa_18.rev + Rau_19.rev +\n                                           Rem_20 + Rsa_24 + Rau_25 + Rem_26.rev +\n                                           Rsa_30.rev + Rau_31.rev +\n                                           Rem_32.rev + Rsa_36.rev +\n                                           Rau_37 + Rem_38 + Rsa_42)/21)\n\n# creates autonomy wellbeing score by averaging 7 items\nWellRdat = mutate(WellRdat, WellR_auto = (Rau_1 +\n                                             Rau_7 +\n                                             Rau_13.rev +\n                                             Rau_19.rev +\n                                             Rau_25 +\n                                             Rau_31.rev +\n                                             Rau_37)/7)\n\n# creates environmental mastery wellbeing score by averaging 7 items\nWellRdat = mutate(WellRdat, WellR_envir = (Rem_2 +\n                                             Rem_8 +\n                                             Rem_14.rev +\n                                             Rem_20 +\n                                             Rem_26.rev +\n                                             Rem_32.rev +\n                                             Rem_38)/7)\n\n# creates self-acceptance wellbeing score by averaging 7 items\nWellRdat = mutate(WellRdat, WellR_accept = (Rsa_6 +\n                                             Rsa_12 +\n                                             Rsa_18.rev +\n                                             Rsa_24 +\n                                             Rsa_30.rev +\n                                             Rsa_36.rev +\n                                             Rsa_42)/7)\n\n# all look pretty normally distributed\nhist(WellRdat$WellR_total, breaks = 30)\nhist(WellRdat$WellR_auto, breaks = 30)\nhist(WellRdat$WellR_envir, breaks = 30)\nhist(WellRdat$WellR_accept, breaks = 30)\n\n\n\n##########################################################################################\n####################### add all calculated scores to original data frame #################\n####################### (doesn't include bad subjects) ###################################\n##########################################################################################\n\ndatWithTotScores = cbind(noBS, select(UCLAdat, UCLA_total)) %>%\n  cbind(select(SWLSdat, SWLS_total)) %>%\n  cbind(select(SEdat, SE_total)) %>%\n  cbind(select(SEdat, SE_perf)) %>%\n  cbind(select(SEdat, SE_social)) %>%\n  cbind(select(SEdat, SE_appear)) %>%\n  cbind(select(Mooddat, Mood_total)) %>%\n  cbind(select(PDdat, PD_general)) %>%\n  cbind(select(PDRdat, PD_race)) %>%\n  cbind(select(EIdat, EI_total)) %>%\n  cbind(select(WellBdat, WellB_total)) %>%\n  cbind(select(WellBdat, WellB_PA)) %>%\n  cbind(select(WellBdat, WellB_NA)) %>%\n  cbind(select(WellRdat, WellR_total)) %>%\n  cbind(select(WellRdat, WellR_auto)) %>%\n  cbind(select(WellRdat, WellR_envir)) %>%\n  cbind(select(WellRdat, WellR_accept))\n\nwrite.table(datWithTotScores, file = \"datWithCalcScores.txt\", sep = \"\\t\", row.names = F)\n\n",
    "created" : 1452011000514.000,
    "dirty" : true,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4029114129",
    "id" : "F29AA978",
    "lastKnownWriteTime" : 1452022443,
    "path" : "~/Documents/Projects/PD+EI MTurk/Data/findBadSubs.R",
    "project_path" : "findBadSubs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}